{"version":3,"sources":["./src/environments/environment.ts","./src/app/services/post.service.ts","./src/app/posts/posts.component.ts","./src/app/posts/posts.component.html","./src/app/post-form/post-form.component.ts","./src/app/post-form/post-form.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostService {\n  \n  private dataUrl = '../../assets/posts.json';\n\n  constructor(private http: HttpClient) { }\n\n  getData(): Observable<any> {\n    return this.http.get(this.dataUrl);\n  }\n\n\n  getPosts(): Observable<any> {\n    return this.http.get('https://jsonplaceholder.typicode.com/posts/1/comments');\n  }\n\n}\n","import { Component, OnInit,Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss']\n})\nexport class PostsComponent implements OnInit {\n\n  @Input() post: any\n  @Output() likeEmit = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  likePost(post){\n    this.likeEmit.emit(post)\n  }\n}\n","<article class=\"card mb-3\">\n    <div class=\"px-3 py-2 post-card\">\n        <h5>\n            {{post?.name}}\n        </h5>\n        <p>\n            {{post?.body}}\n        </p>\n         <div class=\"text-end\">\n            <span (click)=\"likePost(post)\" class=\"heart\">\n                ðŸ’— {{post?.like}}\n            </span>\n         </div>\n    </div>\n</article>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { PostService } from '../services/post.service';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.scss']\n})\nexport class PostFormComponent implements OnInit {\n\n  formGroup\n\n  @Output() postEmit = new EventEmitter();\n\n\n  constructor(\n    private fb: FormBuilder,\n    private postService: PostService\n  ) { }\n\n  ngOnInit(): void {\n    this.initForm()\n  }\n\n  get f() {\n    return this.formGroup.controls;\n  }\n\n  initForm(){\n    this.formGroup = this.fb.group({\n      postBody: new FormControl(\"\", [Validators.required])\n    })\n  }\n  \n  \n\n  submitted = false;\n\n  onSubmit(formData){\n\n      this.submitted = true;\n  \n      if (this.formGroup.invalid) {\n        return;\n      }\n    let postObject = {\n      \"postId\": 0,\n      \"id\": \"\",\n      \"name\": \"You\",\n      \"body\": formData.postBody\n    }\n    \n    this.sendPosts(postObject)\n  }\n\n\n\n  sendPosts(postObject) {\n    this.postEmit.emit(postObject);\n    this.formGroup.reset()\n    window.alert('Post added Successfully')\n  }\n\n}\n","<form action=\"\" class=\"card p-3\" [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"form-group\">\n                <label for=\"\">Post Description</label>\n                <textarea class=\"form-control mb-2\" formControlName=\"postBody\"></textarea>\n                <!-- <div *ngIf=\"submitted && f.postBody.errors\" class=\"invalid-feedback\">\n                    <span *ngIf=\"f.postBody.errors.required\">City name is required</span>\n                </div> -->\n            </div>\n            <div class=\"form-group\">\n                <button class=\"btn btn-primary px-4 mt-3\" type=\"submit\">\n                    Submit\n                </button>\n            </div>\n        </div>\n    </div>\n</form>","import { Component } from '@angular/core';\nimport { PostService } from './services/post.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n  allStaticPosts: any = [];\n\n  allDynamicPosts: any = [];\n  currentTab = 'static'\n\n  constructor(\n    private postService: PostService\n  ){}\n\n\n  ngOnInit(): void {\n    this.getStaticPosts();\n    this.getDynamicPosts();\n  }\n  \n  getStaticPosts(){\n    this.postService.getData().subscribe((result) => {\n      this.allStaticPosts = result;\n    });\n  }\n\n  receivePost(event){\n    console.log(event)\n    if(this.currentTab == 'static'){\n      this.allStaticPosts.push(event)\n    }else{\n      this.allDynamicPosts.push(event)\n    }\n  }\n\n  changeTab(e){\n    this.currentTab = e\n  }\n\n  getDynamicPosts(){\n    this.postService.getPosts().subscribe((result) => {\n      let posts = result\n      posts.forEach((p)=>{\n        p.isLiked = 0\n        p.like = Math.floor(Math.random())\n      })\n      this.allDynamicPosts = JSON.parse(JSON.stringify(result));\n    });\n  }\n\n  likePost(post, type){\n    let postVariable = []\n    if(type == 'static'){\n      postVariable = this.allStaticPosts\n    }else{\n      postVariable = this.allDynamicPosts\n    }\n\n    postVariable.forEach((p)=>{\n      if(p.id == post.id){\n          if(p.isLiked == 0){\n            p.like ++\n            p.isLiked = 1\n          }else{\n            p.like --\n            p.isLiked = 0\n          }\n      }\n    })\n  }\n}\n","<section class=\"main\">\n  <div class=\"container\">\n    <div class=\"row\">\n      <div class=\"col-md-4 col-12\"></div>\n      <div class=\"col-md-4 col-12\">\n        <img src=\"https://kwaleeweb-dev.s3.eu-west-1.amazonaws.com/s3fs-public/2023-09/images/kwalee-lets-play-logo.png\" alt=\"\" class=\"w-100 mb-5\">\n      </div>\n      \n    </div>\n    <div class=\"row\">\n      <div class=\"col-12\">\n          <div class=\"text-center\">\n            <button class=\"btn btn-outline-primary btn-sm px-4 me-3\" (click)=\"changeTab('static')\" [ngClass]=\"{'fill' : currentTab == 'static'}\">\n              Static Posts\n            </button>\n            \n            <button class=\"btn btn-outline-primary btn-sm px-4\" (click)=\"changeTab('api')\" [ngClass]=\"{'fill' : currentTab == 'api'}\">\n              Through API\n            </button>\n\n          </div>\n      </div>\n    </div>\n\n    <div class=\"row\" >\n      <div class=\"col-12\">\n        <h3 class=\"mt-4\">\n          Create Posts\n        </h3>\n      </div>\n      <div class=\"col-12\">\n        <app-post-form (postEmit)=\"receivePost($event)\"></app-post-form>\n      </div>\n      <div class=\"col-12\" *ngIf=\"currentTab == 'static'\">\n        <h3 class=\"mt-4\">\n          All Static Posts\n        </h3>\n        <div class=\"col-12\" >\n          <app-posts *ngFor=\"let post of allStaticPosts\" [post]=\"post\" (likeEmit)=\"likePost($event, 'static')\"></app-posts>\n        </div>\n      </div>\n\n      <div class=\"col-12\" *ngIf=\"currentTab == 'api'\">\n        <h3 class=\"mt-4\">\n          All Dynamic Posts\n        </h3>\n        <app-posts *ngFor=\"let post of allDynamicPosts\" [post]=\"post\" (likeEmit)=\"likePost($event, 'api')\"></app-posts>\n      </div>\n\n      \n    </div>\n\n\n  </div>\n</section>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { PostsComponent } from './posts/posts.component';\nimport { PostFormComponent } from './post-form/post-form.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    PostsComponent,\n    PostFormComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}